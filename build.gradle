plugins {
    id 'maven-publish'
}
apply plugin: 'java'
apply plugin: 'signing'
apply plugin: 'maven-publish'

group = "net.driftverse"

java {
    withJavadocJar()
    withSourcesJar()
    toolchain.languageVersion.set(JavaLanguageVersion.of(17))
}

dependencies {
    compileOnly("io.papermc.paper:paper-api:" + apiVersion + "-R0.1-SNAPSHOT")
    implementation("org.apache.commons:commons-lang3:3.12.0")
    implementation("log4j:log4j:1.2.17")
    testImplementation("com.github.seeseemelk:MockBukkit-v1.18:1.15.5")
    testImplementation("junit:junit:4.12")
    testImplementation("org.mockito:mockito-all:1.10.19")

    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'

    testCompileOnly 'org.projectlombok:lombok:1.18.22'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.22'
}


if (!project.hasProperty("ossrhUsername")) { //so CI doesn't break
    project.ext.ossrhUsername = "foo"
    project.ext.ossrhPassword = "foo"
}



ext {
    apiVersion = apiVersion
    description = description
    website = website
}

repositories {
    mavenCentral()
    maven {
        url = uri("https://papermc.io/repo/repository/maven-public/")
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
}




configurations {
    testCompile.extendsFrom(compileOnly)
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [name: rootProject.name, version: version, apiVersion: apiVersion, description: project.description, website: website]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}


publishing {
    repositories {
        maven {
            name = "OSSRH"
            url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username = project.ext.ossrhUsername
                password = project.ext.ossrhPassword
            }
        }
    }

    publications {
        mavenJava(MavenPublication) {

            groupId = project.getGroup()
            artifactId = project.getName()
            version = project.getVersion()

            from components.java

            pom {
                name = project.name
                description = project.description
                url = project.website
                inceptionYear = "2020"
                packaging = 'jar'

                licenses {
                    license {
                        name = 'GPL-3.0 License'
                        url = 'https://www.gnu.org/licenses/gpl-3.0.html'
                        distribution = 'repo'
                    }
                }

                developers {
                    developer {
                        id = 'tylerfrydenlund'
                        name = 'Tyler Frydenlund'
                    }
                    developer {
                        id = 'laytonromine'
                        name = 'Layton Romine'
                    }
                }

            }

        }
    }

    repositories {
        maven {
            name = 'OSSRH'
            url = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
            credentials {
                username = project.ext.ossrhUsername
                password = project.ext.ossrhPassword
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

javadoc {
    failOnError = false
    enabled = false
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}